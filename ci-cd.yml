name: Test
on:
  push:
    branches:
      - main
      - test-github-action
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2       
      - name: Build
        run: go build ./pkg/...

      - name: Test grading
        run: go test  ./pkg/grading/repository/postgres/integration-test/...
 
        
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3.5.2
      - name: Lint Action
        uses: wearerequired/lint-action@v2.3.0
  golangci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v4
        with:
          go-version: '1.18'
          cache: false
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3
      - name: golangci-lint
        uses: reviewdog/action-golangci-lint@v2

  build_image:
    runs-on: ubuntu-latest
    steps:
      - name: Check current directory
        run: pwd
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Debug environment
        run: |
          ls -la
          ls -la .git
      - name: Enable unsecure command execution
        run: echo "ACTIONS_ALLOW_UNSECURE_COMMANDS=true" >> $GITHUB_ENV
      - name: Get commit information
        run: |
           COMMIT_HASH=$(git rev-parse --short HEAD)
           COMMIT_COUNT=$(git rev-list --count HEAD)
           echo "::set-env name=COMMIT_HASH::$COMMIT_HASH"
           echo "::set-env name=COMMIT_COUNT::$COMMIT_COUNT" 
           
      - name: Generate image tag
        run: |
          TAG="commit-${COMMIT_HASH}-count-${COMMIT_COUNT}"
          echo "::set-env name=IMAGE_TAG::$TAG"

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
     
      - name: Build and push auditlog
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: krelms/auditlog:${{ env.IMAGE_TAG }}
          file: ./cmd/auditlog/Dockerfile
          
      - name: Build and push grading
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: krelms/grading:${{ env.IMAGE_TAG }}
          file: ./cmd/grading/Dockerfile
          
      - name: Build and push inventory
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: krelms/inventory:${{ env.IMAGE_TAG }}
          file: ./cmd/inventory/Dockerfile
          
      - name: Build and push notification
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: krelms/notification:${{ env.IMAGE_TAG }}
          file: ./cmd/notification/Dockerfile
          
      - name: Build and push rbac
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: krelms/rbac:${{ env.IMAGE_TAG }}
          file: ./cmd/rbac/Dockerfile 
          
      - name: Build and push rbacgen
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: krelms/rbacgen:${{ env.IMAGE_TAG }}
          file: ./cmd/rbacgen/Dockerfile
          
      - name: Build and push search
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: krelms/search:${{ env.IMAGE_TAG }}
          file: ./cmd/search/Dockerfile
          
      - name: Build and push syllabus
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: krelms/syllabus:${{ env.IMAGE_TAG }}
          file: ./cmd/syllabus/Dockerfile
          
      - name: Build and push user-management
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: krelms/user-management:${{ env.IMAGE_TAG }}
          file: ./cmd/user-management/Dockerfile

